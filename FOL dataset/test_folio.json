{"premises":"People in this club who perform in school talent shows often attend and are very engaged with school events.\nPeople in this club either perform in school talent shows often or are inactive and disinterested community members.\nPeople in this club who chaperone high school dances are not students who attend the school.\nAll people in this club who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers in this club who wish to further their academic careers and educational opportunities are students who attend the school. \nBonnie is in this club and she either both attends and is very engaged with school events and is a student who attends the school or is not someone who both attends and is very engaged with school events and is not a student who attends the school.","premises-FOL":"\u2200x (InThisClub(x) \u2227 PerformOftenIn(x, schoolTalentShow) \u2192 Attend(x, schoolEvent) \u2227 VeryEngagedWith(x, schoolEvent))\n\u2200x (InThisClub(x) \u2192 PerformOftenIn(x, schoolTalentShow) \u2295 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)))\n\u2200x (InThisClub(x) \u2227 Chaperone(x, highSchoolDance) \u2192 \u00ac(Studen(x) \u2227 AttendSchool(x)))\n\u2200x (InThisClub(x) \u2227 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)) \u2192 Chaperone(x, highSchoolDances))\n\u2200x (InThisClub(x) \u2227 (YoungChildren(x) \u2295 Teenager(x)) \u2227 WishToFurther(x, academicCareer)) \u2192 Studen(x) \u2227 AttendSchool(x))\nInThisClub(bonnie) \u2227 \u00ac((Attend(x, schoolEvent) \u2227 VeryEngagedWith(bonnie, schoolEvent)) \u2295 (Studen(bonne) \u2227 AttendSchool(bonnie)))","conclusion":"Bonnie performs in school talent shows often.","conclusion-FOL":"InThisClub(bonnie) \u2227 (Perform(bonnie, schoolTalentShow))","label":"Uncertain"}
{"premises":"People in this club who perform in school talent shows often attend and are very engaged with school events.\nPeople in this club either perform in school talent shows often or are inactive and disinterested community members.\nPeople in this club who chaperone high school dances are not students who attend the school.\nAll people in this club who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers in this club who wish to further their academic careers and educational opportunities are students who attend the school. \nBonnie is in this club and she either both attends and is very engaged with school events and is a student who attends the school or is not someone who both attends and is very engaged with school events and is not a student who attends the school.","premises-FOL":"\u2200x (InThisClub(x) \u2227 PerformOftenIn(x, schoolTalentShow) \u2192 Attend(x, schoolEvent) \u2227 VeryEngagedWith(x, schoolEvent))\n\u2200x (InThisClub(x) \u2192 PerformOftenIn(x, schoolTalentShow) \u2295 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)))\n\u2200x (InThisClub(x) \u2227 Chaperone(x, highSchoolDance) \u2192 \u00ac(Studen(x) \u2227 AttendSchool(x)))\n\u2200x (InThisClub(x) \u2227 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)) \u2192 Chaperone(x, highSchoolDances))\n\u2200x (InThisClub(x) \u2227 (YoungChildren(x) \u2295 Teenager(x)) \u2227 WishToFurther(x, academicCareer)) \u2192 Studen(x) \u2227 AttendSchool(x))\nInThisClub(bonnie) \u2227 \u00ac((Attend(x, schoolEvent) \u2227 VeryEngagedWith(bonnie, schoolEvent)) \u2295 (Studen(bonne) \u2227 AttendSchool(bonnie)))","conclusion":"If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.","conclusion-FOL":"\u00ac((YoungChildren(bonnie) \u2295 Teenager(bonnie)) \u2227 WishToFurther(bonnie, academicCareer)) \u2295 Chaperone(bonnie, highSchoolDance)) \u2192 (Studen(x) \u2227 AttendSchool(x)) \u2295 (YoungChildren(bonnie) \u2295 Teenager(bonnie)) \u2227 WishToFurther(bonnie, academicCareer))","label":"True"}
{"premises":"People in this club who perform in school talent shows often attend and are very engaged with school events.\nPeople in this club either perform in school talent shows often or are inactive and disinterested community members.\nPeople in this club who chaperone high school dances are not students who attend the school.\nAll people in this club who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers in this club who wish to further their academic careers and educational opportunities are students who attend the school. \nBonnie is in this club and she either both attends and is very engaged with school events and is a student who attends the school or is not someone who both attends and is very engaged with school events and is not a student who attends the school.","premises-FOL":"\u2200x (InThisClub(x) \u2227 PerformOftenIn(x, schoolTalentShow) \u2192 Attend(x, schoolEvent) \u2227 VeryEngagedWith(x, schoolEvent))\n\u2200x (InThisClub(x) \u2192 PerformOftenIn(x, schoolTalentShow) \u2295 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)))\n\u2200x (InThisClub(x) \u2227 Chaperone(x, highSchoolDance) \u2192 \u00ac(Studen(x) \u2227 AttendSchool(x)))\n\u2200x (InThisClub(x) \u2227 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)) \u2192 Chaperone(x, highSchoolDances))\n\u2200x (InThisClub(x) \u2227 (YoungChildren(x) \u2295 Teenager(x)) \u2227 WishToFurther(x, academicCareer)) \u2192 Studen(x) \u2227 AttendSchool(x))\nInThisClub(bonnie) \u2227 \u00ac((Attend(x, schoolEvent) \u2227 VeryEngagedWith(bonnie, schoolEvent)) \u2295 (Studen(bonne) \u2227 AttendSchool(bonnie)))","conclusion":"If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.","conclusion-FOL":"(Chaperone(bonnie, highSchoolDance) \u2295 Perform(bonnie, schoolTalentShow)) \u2192 (YoungChildren(bonnie) \u2295 Teenager(bonnie)) \u2227 WishToFurther(bonnie, academicCareer)) \u2227 (InActive(bonnie) \u2227 Disinterested(bonnie) \u2227 MemberOf(bonnie, community))","label":"False"}
{"premises":"All employees who schedule a meeting with their customers will go to the company building today. \nEveryone who has lunch in the company building schedules meetings with their customers. \nEmployees have lunch either in the company building or at home.\nIf an employee has lunch at home, they are working remotely from home.\nAll employees who are in other countries work remotely from home. \nNo managers work remotely from home. \nJames will appear in the company today if and only if he is a manager.","premises-FOL":"\u2200x ((Employee(x) \u2227 Schedule(x, meeting, customers)) \u2192 AppearIn(x, company))\n\u2200x ((Employee(x) \u2227 HasLunch(x, company)) \u2192 Schedule(x, meeting, customers))\n\u2200x (Employee(x) \u2192 (HasLunch(x, company) \u2295 HasLunch(x, home)))\n\u2200x ((Employee(x) \u2227 HasLunch(x, home)) \u2192 Work(x, home))\n\u2200x ((Employee(x) \u2227 (\u00acIn(x, homecountry))) \u2192 Work(x, home))\n\u2200x (Manager(x) \u2192 \u00acWork(x, home))\n\u00ac(Manager(james) \u2295 AppearIn(james, company))","conclusion":"James has lunch in the company.","conclusion-FOL":"HasLunch(james, company)","label":"Uncertain"}
{"premises":"All employees who schedule a meeting with their customers will go to the company building today. \nEveryone who has lunch in the company building schedules meetings with their customers. \nEmployees have lunch either in the company building or at home.\nIf an employee has lunch at home, they are working remotely from home.\nAll employees who are in other countries work remotely from home. \nNo managers work remotely from home. \nJames will appear in the company today if and only if he is a manager.","premises-FOL":"\u2200x ((Employee(x) \u2227 Schedule(x, meeting, customers)) \u2192 AppearIn(x, company))\n\u2200x ((Employee(x) \u2227 HasLunch(x, company)) \u2192 Schedule(x, meeting, customers))\n\u2200x (Employee(x) \u2192 (HasLunch(x, company) \u2295 HasLunch(x, home)))\n\u2200x ((Employee(x) \u2227 HasLunch(x, home)) \u2192 Work(x, home))\n\u2200x ((Employee(x) \u2227 (\u00acIn(x, homecountry))) \u2192 Work(x, home))\n\u2200x (Manager(x) \u2192 \u00acWork(x, home))\n\u00ac(Manager(james) \u2295 AppearIn(james, company))","conclusion":"James does not have lunch in the company.","conclusion-FOL":"\u00acHasLunch(james, company)","label":"Uncertain"}
{"premises":"All employees who schedule a meeting with their customers will go to the company building today. \nEveryone who has lunch in the company building schedules meetings with their customers. \nEmployees have lunch either in the company building or at home.\nIf an employee has lunch at home, they are working remotely from home.\nAll employees who are in other countries work remotely from home. \nNo managers work remotely from home. \nJames will appear in the company today if and only if he is a manager.","premises-FOL":"\u2200x ((Employee(x) \u2227 Schedule(x, meeting, customers)) \u2192 AppearIn(x, company))\n\u2200x ((Employee(x) \u2227 HasLunch(x, company)) \u2192 Schedule(x, meeting, customers))\n\u2200x (Employee(x) \u2192 (HasLunch(x, company) \u2295 HasLunch(x, home)))\n\u2200x ((Employee(x) \u2227 HasLunch(x, home)) \u2192 Work(x, home))\n\u2200x ((Employee(x) \u2227 (\u00acIn(x, homecountry))) \u2192 Work(x, home))\n\u2200x (Manager(x) \u2192 \u00acWork(x, home))\n\u00ac(Manager(james) \u2295 AppearIn(james, company))","conclusion":"If James is either a manager or in other countries,  then James does not either has lunch at home or work remotely from home. If James either has lunch at home or works remotely from home, then he is neither a manager nor does he work in other countries. [contrapositive is more natural]","conclusion-FOL":"Manager(james) \u2192 \u00acWork(james, home)","label":"True"}
{"premises":"When the Monkeypox virus occurs in a being, it may get Monkeypox. \nMonkeypox virus can occur in certain animals.\nHumans are mammals.\nMammals are animals.\nSymptoms of Monkeypox include fever, headache, muscle pains, and tiredness. \nPeople feel tired when they get the flu.","premises-FOL":"\u2203x (OccurIn(monkeypoxVirus, x) \u2227 Get(x, monkeypoxVirus))\n\u2203x (Animal(x) \u2227 OccurIn(monkeypoxVirus, x))\n\u2200x (Human(x) \u2192 Mammal(x))\n\u2200x (Mammal(x) \u2192 Animal(x))\n\u2203x (SymptonOf(x, monkeypoxVirus) \u2227 (Fever(x) \u2228 Headache(x) \u2228 MusclePain(x) \u2228 Tired(x)))\n\u2200x (Human(x) \u2227 Get(x, flu) \u2192 Feel(x, tired))","conclusion":"There is an animal.","conclusion-FOL":"\u2203x (Animal(x))","label":"True"}
{"premises":"When the Monkeypox virus occurs in a being, it may get Monkeypox. \nMonkeypox virus can occur in certain animals.\nHumans are mammals.\nMammals are animals.\nSymptoms of Monkeypox include fever, headache, muscle pains, and tiredness. \nPeople feel tired when they get the flu.","premises-FOL":"\u2203x (OccurIn(monkeypoxVirus, x) \u2227 Get(x, monkeypoxVirus))\n\u2203x (Animal(x) \u2227 OccurIn(monkeypoxVirus, x))\n\u2200x (Human(x) \u2192 Mammal(x))\n\u2200x (Mammal(x) \u2192 Animal(x))\n\u2203x (SymptonOf(x, monkeypoxVirus) \u2227 (Fever(x) \u2228 Headache(x) \u2228 MusclePain(x) \u2228 Tired(x)))\n\u2200x (Human(x) \u2227 Get(x, flu) \u2192 Feel(x, tired))","conclusion":"No one gets the flu.","conclusion-FOL":"\u2200x (Human(x) \u2192 \u00acGet(x, flu))","label":"Uncertain"}
{"premises":"When the Monkeypox virus occurs in a being, it may get Monkeypox. \nMonkeypox virus can occur in certain animals.\nHumans are mammals.\nMammals are animals.\nSymptoms of Monkeypox include fever, headache, muscle pains, and tiredness. \nPeople feel tired when they get the flu.","premises-FOL":"\u2203x (OccurIn(monkeypoxVirus, x) \u2227 Get(x, monkeypoxVirus))\n\u2203x (Animal(x) \u2227 OccurIn(monkeypoxVirus, x))\n\u2200x (Human(x) \u2192 Mammal(x))\n\u2200x (Mammal(x) \u2192 Animal(x))\n\u2203x (SymptonOf(x, monkeypoxVirus) \u2227 (Fever(x) \u2228 Headache(x) \u2228 MusclePain(x) \u2228 Tired(x)))\n\u2200x (Human(x) \u2227 Get(x, flu) \u2192 Feel(x, tired))","conclusion":"Symptoms of Monkeypox include coughing.","conclusion-FOL":"\u2203x (SymptonOf(x, monkeypoxVirus) \u2227 Coughing(x))","label":"Uncertain"}
{"premises":"There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould\u2019s wild turkey, Merriam\u2019s wild turkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is not a Gould's wild turkey.\nTom is neither a Merriam's wild turkey nor a Rio Grande wild turkey.\nTom is a wild turkey.","premises-FOL":"\u2200x (WildTurkey(x) \u2192 (EasternWildTurkey(x) \u2228 OsceolaWildTurkey(x) \u2228 GouldsWildTurkey(x) \u2228 MerriamsWildTurkey(x) \u2228 RiograndeWildTurkey(x) \u2228 OcellatedWildTurkey(x)))\n\u00ac(EasternWildTurkey(tom))\n\u00ac(OsceolaWildTurkey(tom))\n\u00ac(GouldsWildTurkey(tom))\n\u00ac(MerriamsWildTurkey(tom) \u2228 RiograndeWildTurkey(tom))\nWildTurkey(tom)","conclusion":"Tom is an Ocellated wild turkey.","conclusion-FOL":"OcellatedWildTurkey(tom)","label":"True"}
{"premises":"There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould\u2019s wild turkey, Merriam\u2019s wild turkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is not a Gould's wild turkey.\nTom is neither a Merriam's wild turkey nor a Rio Grande wild turkey.\nTom is a wild turkey.","premises-FOL":"\u2200x (WildTurkey(x) \u2192 (EasternWildTurkey(x) \u2228 OsceolaWildTurkey(x) \u2228 GouldsWildTurkey(x) \u2228 MerriamsWildTurkey(x) \u2228 RiograndeWildTurkey(x) \u2228 OcellatedWildTurkey(x)))\n\u00ac(EasternWildTurkey(tom))\n\u00ac(OsceolaWildTurkey(tom))\n\u00ac(GouldsWildTurkey(tom))\n\u00ac(MerriamsWildTurkey(tom) \u2228 RiograndeWildTurkey(tom))\nWildTurkey(tom)","conclusion":"Tom is an Eastern wild turkey.","conclusion-FOL":"EasternWildTurkey(tom)","label":"False"}
{"premises":"There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould\u2019s wild turkey, Merriam\u2019s wild turkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is not a Gould's wild turkey.\nTom is neither a Merriam's wild turkey nor a Rio Grande wild turkey.\nTom is a wild turkey.","premises-FOL":"\u2200x (WildTurkey(x) \u2192 (EasternWildTurkey(x) \u2228 OsceolaWildTurkey(x) \u2228 GouldsWildTurkey(x) \u2228 MerriamsWildTurkey(x) \u2228 RiograndeWildTurkey(x) \u2228 OcellatedWildTurkey(x)))\n\u00ac(EasternWildTurkey(tom))\n\u00ac(OsceolaWildTurkey(tom))\n\u00ac(GouldsWildTurkey(tom))\n\u00ac(MerriamsWildTurkey(tom) \u2228 RiograndeWildTurkey(tom))\nWildTurkey(tom)","conclusion":"Joey is a wild turkey.","conclusion-FOL":"WildTurkey(joey)","label":"Uncertain"}
{"premises":"A Japanese game company created the game the Legend of Zelda.\nAll games on the Top 10 list are made by Japanese game companies.\nIf a game sells more than one million copies, then it will be included in the Top 10 list.\nThe Legend of Zelda sold more than one million copies.","premises-FOL":"Game(theLegendofZelda) \u2227 \u2203x (Japanese(x) \u2227 VideoGameCompany(x) \u2227 Created(x, theLegendofZelda))\n\u2200x \u2200y ((Game(x) \u2227 InTop10(x) \u2227 Created(y,x)) \u2192 Japanese(y))\n\u2200x ((Game(x) \u2227 \u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(x, y))) \u2192 Top10(x)))\n\u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(theLegendofZelda,y))","conclusion":"The Legend of Zelda is on the Top 10 list.","conclusion-FOL":"Top10(thelegendofzelda)","label":"True"}
{"premises":"A Japanese game company created the game the Legend of Zelda.\nAll games on the Top 10 list are made by Japanese game companies.\nIf a game sells more than one million copies, then it will be included in the Top 10 list.\nThe Legend of Zelda sold more than one million copies.","premises-FOL":"Game(theLegendofZelda) \u2227 \u2203x (Japanese(x) \u2227 VideoGameCompany(x) \u2227 Created(x, theLegendofZelda))\n\u2200x \u2200y ((Game(x) \u2227 InTop10(x) \u2227 Created(y,x)) \u2192 Japanese(y))\n\u2200x ((Game(x) \u2227 \u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(x, y))) \u2192 Top10(x)))\n\u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(theLegendofZelda,y))","conclusion":"FIFA 22 is made by a Japanese video game company.","conclusion-FOL":"\u2203x(Created(x, fifa22) \u2227 Japanese(x) \u2227 VideoGameCompany(x))","label":"Uncertain"}
{"premises":"A Japanese game company created the game the Legend of Zelda.\nAll games on the Top 10 list are made by Japanese game companies.\nIf a game sells more than one million copies, then it will be included in the Top 10 list.\nThe Legend of Zelda sold more than one million copies.","premises-FOL":"Game(theLegendofZelda) \u2227 \u2203x (Japanese(x) \u2227 VideoGameCompany(x) \u2227 Created(x, theLegendofZelda))\n\u2200x \u2200y ((Game(x) \u2227 InTop10(x) \u2227 Created(y,x)) \u2192 Japanese(y))\n\u2200x ((Game(x) \u2227 \u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(x, y))) \u2192 Top10(x)))\n\u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(theLegendofZelda,y))","conclusion":"The Legend of Zelda is not on the Top 10 list.","conclusion-FOL":"\u00acTop10(thelegendofzelda)","label":"False"}
{"premises":"All squares are four-sided.\nAll four-sided things are shapes. ","premises-FOL":"\u2200x (Square(x) \u2192 FourSided(x))\n\u2200x (FourSided(x) \u2192 Shape(x))","conclusion":"All squares are shapes.","conclusion-FOL":"\u2200x (Square(x) \u2192 Shape(x))","label":"True"}